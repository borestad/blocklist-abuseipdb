#!/usr/bin/env bash

LATEST="abuseipdb-s100.ipv4"

aggregate() {
  local HOURS=$1
  local OUTPUT=$2
  TEMPFILE=$(mktemp)
  cat $LATEST >> $TEMPFILE

  for commit in $(git log --format=format:%H --since="$HOURS hours ago" $LATEST); do
    let "i++"
    git show $commit:$LATEST >> $TEMPFILE

    # Optimize in chunks to ensure the tempfile doesn't become HUGE
    if [[ "$i%100" -eq "0" ]]; then
      iprange --print-single-ips $TEMPFILE >| "$TEMPFILE-tmp"
      mv "$TEMPFILE-tmp" $TEMPFILE
    fi
  done

  iprange --print-single-ips $TEMPFILE >| $OUTPUT
  echo "$OUTPUT (`wc -l < $OUTPUT` ip)"
}

update-stats() {
  echo "âœ¨ Update footer"
  # Delete everything below placeholder
  sed -i '/FOOTER-PLACEHOLDER/q' README.md

  update=$(date -u '+%Y-%m-%d - %H:%M:%S')
  echo "Updated every 5 hours<br>" >> README.md
  echo "Last update: \`$update\`" >> README.md

  echo '```' >> README.md
  find . -mindepth 1 -maxdepth 1 -iname '*.ipv4' -print0 | sort -zV | xargs -I {} -0 sh -c 'name=$(basename {}); echo "$name ($(wc -l < $name) ip)"' >> README.md
  echo '```' >> README.md
}



aggregate $(( 24 + 1 ))        "abuseipdb-s100-1d.ipv4" &
aggregate $(( 24 * 2 + 1 ))    "abuseipdb-s100-2d.ipv4" &
aggregate $(( 24 * 3 + 1 ))    "abuseipdb-s100-3d.ipv4" &
aggregate $(( 24 * 7 + 1 ))    "abuseipdb-s100-7d.ipv4" &
aggregate $(( 24 * 14 + 1 ))   "abuseipdb-s100-14d.ipv4" &
aggregate $(( 24 * 30 + 1 ))   "abuseipdb-s100-30d.ipv4" &
aggregate $(( 24 * 60 + 1 ))   "abuseipdb-s100-60d.ipv4" &
aggregate $(( 24 * 90 + 1 ))   "abuseipdb-s100-90d.ipv4" &
aggregate $(( 24 * 120 + 1 ))  "abuseipdb-s100-120d.ipv4" &
aggregate $(( 24 * 9999 ))     "abuseipdb-s100-all.ipv4" &

wait

update-stats
